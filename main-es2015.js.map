{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.html","./src/app/app-routing.module.ts","./src/app/app.component.scss","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/material-module/material-module.module.ts","./src/app/services/liff.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","module.exports = \"<div class=\\\"container\\\">\\n    <div class=\\\"text-center\\\">\\n      <p>ng x line liff</p>\\n      <br>\\n      <div class=\\\"d-flex\\\">\\n        {{userProfile | json}}\\n      </div>\\n      <div>\\n        <input matInput class=\\\"form-control\\\" type=\\\"text\\\" [(ngModel)]=\\\"messages\\\">\\n        <br>\\n        <button class=\\\"btn btn-primary\\\" (click)=\\\"sendMessages()\\\">send</button>\\n      </div>\\n    </div>\\n  </div>\\n\\n<router-outlet></router-outlet>\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { LiffService } from './services/liff.service';\n\ndeclare var liff: any;\nconst SERVICE_UUID = 'c4dd444d-6d46-47de-8b24-c3b70fbf8b31';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n  title = 'LIFF Mock';\n  messages: string;\n  userProfile: any;\n\n  constructor(private liffService: LiffService) {\n    this.messages = '';\n    this.initLineLiff();\n  }\n\n  ngOnInit() {\n    this.initLineLiff();\n  }\n\n  async initLineLiff() {\n    try {\n      const data: any = await this.liffService.initLineLiff();\n      this.userProfile = await liff.getProfile();\n      alert(`こんにちは！ ${this.userProfile.displayName}`);\n    } catch (err) {\n      alert(err);\n    }\n  }\n\n  async sendMessages() {\n    try {\n      const successMsgs = await liff.sendMessages([\n        {\n          type: 'text',\n          text: this.messages\n        }\n      ]);\n      liff.closeWindow();\n\n    } catch (e) {\n      alert(e);\n    }\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { FormsModule } from '@angular/forms';\nimport { AppComponent } from './app.component';\n\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MaterialModuleModule } from './material-module/material-module.module';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    BrowserAnimationsModule,\n    MaterialModuleModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule } from '@angular/material/form-field';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    MatButtonModule,\n    MatInputModule,\n    MatFormFieldModule\n  ],\n  exports: [\n    MatButtonModule,\n    MatInputModule,\n    MatFormFieldModule\n  ]\n})\nexport class MaterialModuleModule { }\n","import { Injectable } from '@angular/core';\nimport { resolve, reject } from 'q';\ndeclare var liff: any;\n\nconst USER_SERVICE_UUID = 'c4dd444d-6d46-47de-8b24-c3b70fbf8b31';\nconst PSDI_SERVICE_UUID = 'e625601e-9e55-4597-a598-76018a0d293d';\nconst PSDI_CHARACTERISTIC_UUID = '26e2b12b-85f0-4f3f-9fdd-91d114270e6e';\n\nconst deviceUUIDSet = new Set();\nconst connectedUUIDSet = new Set();\nconst connectingUUIDSet = new Set();\nconst notificationUUIDSet = new Set();\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LiffService {\n  constructor() {}\n\n  // makeErrorMsg(errObj) {\n  //   return `Error\\n${errObj.code}\\n${errObj.message}`;\n  // }\n\n  initLineLiff() {\n    return new Promise((resolveLiff, rejectLiff) => {\n      liff.init(\n        () => {\n          this.initializeLiff();\n        },\n        err => {\n          console.log(err);\n          // this.uiStatusError(this.makeErrorMsg(err), false);\n        }\n      );\n    });\n  }\n\n  initializeLiff() {\n    liff\n      .initPlugins(['bluetooth'])\n      .then(() => {\n        this.liffCheckAvailablityAndDo(() => this.liffRequestDevice());\n      })\n      .catch(err => {\n        console.log(err);\n        // this.uiStatusError(this.makeErrorMsg(err), false);\n      });\n  }\n\n  liffCheckAvailablityAndDo(callbackIfAvailable) {\n    liff.bluetooth\n      .getAvailability()\n      .then(isAvailable => {\n        if (isAvailable) {\n          this.uiToggleDeviceConnected(false);\n          callbackIfAvailable();\n        } else {\n          // this.uiStatusError('Bluetooth not available', true);\n          setTimeout(\n            () => this.liffCheckAvailablityAndDo(callbackIfAvailable),\n            10000\n          );\n        }\n      })\n      .catch(error => {\n        // this.uiStatusError(makeErrorMsg(error), false);\n        console.log(error);\n      });\n  }\n\n  liffRequestDevice() {\n    liff.bluetooth\n      .requestDevice()\n      .then(device => {\n        this.liffConnectToDevice(device);\n      })\n      .catch(error => {\n        // this.uiStatusError(makeErrorMsg(error), false);\n        console.log(error);\n      });\n  }\n\n  liffConnectToDevice(device) {\n    device.gatt.connect().then(() => {\n      // document.getElementById('device-name').innerText = device.name;\n      // document.getElementById('device-id').innerText = device.id;\n\n      // // Show status connected\n      this.uiToggleDeviceConnected(true);\n      // device.gatt\n      //   .getPrimaryService(USER_SERVICE_UUID)\n      //   .then(service => {\n      //     this.liffGetUserService(service);\n      //   })\n      //   .catch(error => {\n      //     console.log(error);\n      //     // this.uiStatusError(makeErrorMsg(error), false);\n      //   });\n      device.gatt\n        .getPrimaryService(PSDI_SERVICE_UUID)\n        .then(service => {\n          this.liffGetPSDIService(service);\n        })\n        .catch(error => {\n          console.log(error);\n          // uiStatusError(makeErrorMsg(error), false);\n        });\n\n      const disconnectCallback = () => {\n        // Show status disconnected\n        this.uiToggleDeviceConnected(false);\n\n        // Remove disconnect callback\n        device.removeEventListener(\n          'gattserverdisconnected',\n          disconnectCallback\n        );\n\n        // Reset LED state\n        // ledState = false;\n        // Reset UI elements\n        // uiToggleLedButton(false);\n        // uiToggleStateButton(false);\n\n        // Try to reconnect\n        this.initLineLiff();\n      };\n      device.addEventListener('gattserverdisconnected', disconnectCallback);\n    }).catch(error => {\n      console.log(error);\n      // uiStatusError(makeErrorMsg(error), false);\n    });\n  }\n\n  uiToggleDeviceConnected(connected) {\n    // const elStatus = document.getElementById(\"status\");\n    // const elControls = document.getElementById(\"controls\");\n\n    // elStatus.classList.remove(\"error\");\n\n    if (connected) {\n      console.log(connected);\n        // Hide loading animation\n        // this.uiToggleLoadingAnimation(false);\n        // Show status connected\n        // elStatus.classList.remove(\"inactive\");\n        // elStatus.classList.add(\"success\");\n        // elStatus.innerText = \"Device connected\";\n        // // Show controls\n        // elControls.classList.remove(\"hidden\");\n    } else {\n      console.log('Not Connected');\n        // Show loading animation\n        // this.uiToggleLoadingAnimation(true);\n        // Show status disconnected\n        // elStatus.classList.remove(\"success\");\n        // elStatus.classList.add(\"inactive\");\n        // elStatus.innerText = \"Device disconnected\";\n        // // Hide controls\n        // elControls.classList.add(\"hidden\");\n    }\n  }\n\n  liffGetPSDIService(service) {\n    service.getCharacteristic(PSDI_CHARACTERISTIC_UUID).then(characteristic => {\n      return characteristic.readValue();\n    }).then(value => {\n      const psdi = new Uint8Array(value.buffer).reduce((output, byte) => output + ('0' + byte.toString(16)).slice(-2), '');\n    }).catch(error => {\n      console.log(error);\n      // this.uiStatusError(makeErrorMsg(error), false);\n    });\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\nimport 'hammerjs';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}