{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.html","./src/app/app-routing.module.ts","./src/app/app.component.scss","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/material-module/material-module.module.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","module.exports = \"<mat-toolbar>Line Things APP</mat-toolbar>\\n<div class=\\\"container\\\">\\n    <div class=\\\"text-center\\\">\\n      <p>\\n        <span *ngIf=\\\"statusBle\\\">接続しました</span>\\n        <!-- <span *ngIf=\\\"statusBle\\\">接続しておりません</span> -->\\n      </p>\\n      <br>\\n      <div *ngIf=\\\"statusBle\\\" class=\\\"d-flex\\\">\\n        つながっているよ！\\n      </div>\\n      <div *ngIf=\\\"!statusBle\\\" class=\\\"d-flex\\\">\\n          調子が悪い時は再起動してみてね！\\n        </div>\\n      <!-- <div>\\n        <input matInput class=\\\"form-control\\\" type=\\\"text\\\" [(ngModel)]=\\\"messages\\\">\\n        <br>\\n        <button class=\\\"btn btn-primary\\\" (click)=\\\"sendMessages()\\\">send</button>\\n      </div> -->\\n    </div>\\n  </div>\\n\\n<router-outlet></router-outlet>\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\n// import { LiffService } from './services/liff.service';\n\ndeclare var liff: any;\nconst SERVICE_UUID = 'c4dd444d-6d46-47de-8b24-c3b70fbf8b31';\nconst LED_CHARACTERISTIC_UUID   = 'E9062E71-9E62-4BC6-B0D3-35CDCD9B027B';\nconst BTN_CHARACTERISTIC_UUID   = '62FBD229-6EDD-4D1A-B554-5C4E1BB29169';\n​\n// PSDI Service UUID: Fixed value for Developer Trial\nconst PSDI_SERVICE_UUID         = 'E625601E-9E55-4597-A598-76018A0D293D';\nconst PSDI_CHARACTERISTIC_UUID  = '26E2B12B-85F0-4F3F-9FDD-91D114270E6E';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n  title = 'LIFF Mock';\n  messages: string;\n  userProfile: any;\n  statusBle: boolean;\n\n  constructor() {\n    this.messages = '';\n    this.statusBle = true;\n  }\n\n  ngOnInit() {\n    liff.init(() => this.initLineLiff(), (error) => alert('31' + JSON.stringify(error)));\n  }\n\n  async initLineLiff() {\n    liff.initPlugins(['bluetooth']).then(() => {\n      liff.bluetooth.getAvailability().then((isAvailable: boolean) => {\n        // alert('37 ' + JSON.stringify(liff));\n        liff.bluetooth.requestDevice().then((device: any) => {\n          this.statusBle = true;\n          alert('39 ' + device.gatt.device.name);\n          // device.watchAdvertisements();\n          device.gatt.connect();\n        }).catch((error1) => alert('41 ERROR: ' + JSON.stringify(error1)));\n      }).catch((error2) => alert('42 ERROR: ' + JSON.stringify(error2)));\n    }).catch((error3) => {\n      alert('44 ERROR' + JSON.stringify(error3));\n    });\n  }\n\n  // async liffCheckAvailablityAndDo(callbackIfAvailable) {\n  //   try {\n  //     liff.bluetooth.getAvailability().then((isAvailable) => {\n  //       this.statusBle = true;\n  //       alert('45 ' + JSON.stringify(isAvailable));\n  //       callbackIfAvailable();\n  //     });\n  //     // if (isAvailable) {\n  //     //   callbackIfAvailable();\n  //     // } else {\n  //     //   this.statusBle = false;\n  //     //   setTimeout(() => this.liffCheckAvailablityAndDo(callbackIfAvailable), 10000);\n  //     // }\n  //   } catch (error) {\n  //     alert('Bluetooth をオンにしてください！');\n  //   }\n  // }\n\n  liffConnectToDevice(device) {\n    device.gatt.connect().then(() => {\n      device.gatt.getPrimaryService(SERVICE_UUID).then(service => {\n        this.liffGetUserService(service);\n      }).catch((error) => {\n        alert(JSON.stringify(error));\n      });\n\n      device.gatt.getPrimaryService(PSDI_SERVICE_UUID).then(service => {\n        this.liffGetPSDIService(service);\n      }).catch((error) => {\n        alert(JSON.stringify(error));\n      });\n    });\n  }\n\n  liffGetUserService(service) {\n    alert(JSON.stringify(service));\n    // service.getCharacteristic(BTN_CHARACTERISTIC_UUID).then(characteristic => {\n    //   this.liffGetButtonStateCharacteristic(characteristic);\n    // }).catch((error) => {\n    //   alert(JSON.stringify(error));\n    // });\n\n    // service.getCharacteristic(LED_CHARACTERISTIC_UUID).then(characteristic => {\n    //   // window= characteristic;\n    //   this.liffToggleDeviceLedState(false);\n    // });\n  }\n\n\n  liffGetPSDIService(service) {\n    alert(JSON.stringify(service));\n  }\n\n\n  // async initLineLiff() {\n  //   try {\n  //     const data: any = await this.liffService.initLineLiff();\n  //     this.userProfile = await liff.getProfile();\n  //   } catch (err) {\n  //   }\n  // }\n\n  // async sendMessages() {\n  //   try {\n  //     const successMsgs = await liff.sendMessages([\n  //       {\n  //         type: 'text',\n  //         text: this.messages\n  //       }\n  //     ]);\n  //     liff.closeWindow();\n\n  //   } catch (e) {\n  //   }\n  // }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { FormsModule } from '@angular/forms';\nimport { AppComponent } from './app.component';\n\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MaterialModuleModule } from './material-module/material-module.module';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    BrowserAnimationsModule,\n    MaterialModuleModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatToolbarModule } from '@angular/material/toolbar';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    MatButtonModule,\n    MatInputModule,\n    MatFormFieldModule,\n    MatToolbarModule,\n  ],\n  exports: [\n    MatButtonModule,\n    MatInputModule,\n    MatFormFieldModule,\n    MatToolbarModule,\n  ]\n})\nexport class MaterialModuleModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\nimport 'hammerjs';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}