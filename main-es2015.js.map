{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.html","./src/app/app-routing.module.ts","./src/app/app.component.scss","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/material-module/material-module.module.ts","./src/app/services/liff.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","module.exports = \"<div class=\\\"container\\\">\\n    <div class=\\\"text-center\\\">\\n      <p>ng x line liff</p>\\n      <br>\\n      <div class=\\\"d-flex\\\">\\n        {{userProfile | json}}\\n      </div>\\n      <div>\\n        <input matInput class=\\\"form-control\\\" type=\\\"text\\\" [(ngModel)]=\\\"messages\\\">\\n        <br>\\n        <button class=\\\"btn btn-primary\\\" (click)=\\\"sendMessages()\\\">send</button>\\n      </div>\\n    </div>\\n  </div>\\n\\n<router-outlet></router-outlet>\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component } from '@angular/core';\nimport { LiffService } from './services/liff.service';\n\ndeclare var liff: any;\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'LIFF Mock';\n  messages: string;\n  userProfile: any;\n\n  constructor(private liffService: LiffService) {\n    this.messages = '';\n  }\n\n  async initLineLiff() {\n    try {\n      const data: any = await this.liffService.initLineLiff();\n      this.userProfile = await liff.getProfile();\n      alert(`こんにちは！ ${this.userProfile.displayName}`);\n    } catch(err) {\n      alert(err);\n    }\n  }\n\n  async sendMessages() {\n    try {\n      const successMsgs = await liff.sendMessages([\n        {\n          type: 'text',\n          text: this.messages\n        }\n      ])\n      liff.closeWindow();\n\n    } catch (e) {\n      alert(e);\n    }\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { FormsModule } from '@angular/forms';\nimport { AppComponent } from './app.component';\n\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MaterialModuleModule } from './material-module/material-module.module';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    BrowserAnimationsModule,\n    MaterialModuleModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule } from '@angular/material/form-field';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    MatButtonModule,\n    MatInputModule,\n    MatFormFieldModule\n  ],\n  exports: [\n    MatButtonModule,\n    MatInputModule,\n    MatFormFieldModule\n  ]\n})\nexport class MaterialModuleModule { }\n","import { Injectable } from '@angular/core';\nimport { resolve, reject } from 'q';\ndeclare var liff: any;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LiffService {\n\n  constructor() { }\n\n  initLineLiff() {\n    return new Promise((resolveLiff, rejectLiff) => {\n      liff.init(data => {\n        resolve(liff.getProfile());\n      }, err => {\n        reject(err);\n      });\n    });\n  }\n\n  getLineProfile() {\n    return new Promise((resolveProfile, rejectProfile) => {\n      liff.getProfile(data => {\n        resolve(data);\n      }, err => {\n        reject(err);\n      });\n    });\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\nimport 'hammerjs';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}